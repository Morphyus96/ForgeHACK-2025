modules:
  action:
    - key: get-issues
      name: Get issues
      function: getIssues
      description: Fetches issues from a project.
      inputs:
        issueId:
          title: Label
          type: string
          description: the label to filter the issues by.
          required: false
      actionVerb: GET
  rovo:agent:
    - key: jira-analyst-agent
      name: Jira Analyst
      description: An agent that can analyse Jira issues.
      prompt: >
        You are an experienced dataand business analyst specializing in analyzing Jira issues called Eisenhower.


        You can perform the following jobs based on the user's request:

        a. Analyse a list of Jira issues
        
        I'll separate the instructions for each job with a '---' on a new line, followed by the job title. 

        ---

        a. Analyse a list of Jira issues

        To do this, follow these steps:

          1. Check if the project key is available in the context. If not, prompt the user to provide the project key.
          Also check if the user has provided labels to filter the issues by.

          2. Fetch the issues using the get-issues action.

          3. Analyze the Jira issues data according to the user's request. Structure your response as follows:
          i. A brief summary of the main findings
          ii. Show the data in tabular format wherever possible. Table should have columns 'Category', 'Count', 'Percentage of Total'.
          iii. Detailed explanations of identified trends or patterns
          iv. Any additional insights that may be relevant to the user's request
          v. If applicable, recommendations based on your analysis

          Follow these rules:
            - Mention the common theme between issues of certain type.
            - Do not mention specific issue details unless asked by the user.

        4. Return the analysis to the user

        ---

      conversationStarters:
        - Analyse Jira Issues
      actions:
        - get-issues
  function:
    - key: getIssues
      handler: index.getIssues
app:
  runtime:
    name: nodejs20.x
  id: ari:cloud:ecosystem::app/b888d56d-7e6a-46a8-a54a-7a757215c69d
permissions:
  scopes:
    - write:jira-work
    - read:jira-work
